#!/usr/bin/python3
import threading

import sys
from os import system
from paramiko import SSHClient, AutoAddPolicy, RSAKey
from paramiko.auth_handler import AuthenticationException, SSHException
from scp import SCPClient, SCPException

from sshConfig import *

class RemoteClient:

    def __init__(self, host, user, sshKeyPath, remotePath):
        self.host = host
        self.user = user
        self.sshKeyPath = './keys/sshKeys'
        self.remotePath = remotePath
        self.client = None
        self.scp = None
        self.uploadSSHKey()

    def getSSHKey(self):
        
        try:
            self.sshKey = RSAKey.from_private_key_file(self.sshKeyPath)
        
        except SSHException as e:
            print(e)
        
        return self.sshKey

    def uploadSSHKey(self):
        
        try:
            system(f'ssh-copy-id -i {self.sshKeyPath} {self.user}@{self.host}>/dev/null 2>&1')
            system(f'ssh-copy-id -i {self.sshKeyPath}.pub {self.user}@{self.host}>/dev/null 2>&1')
            
        except FileNotFoundError as e:
            print(e)

    def connect(self):
        try:
            self.client = SSHClient()
            self.client.load_system_host_keys()
            self.client.set_missing_host_key_policy(AutoAddPolicy())
            self.client.connect(self.host,
                                username=self.user,
                                key_filename=self.sshKeyPath,
                                look_for_keys=True,
                                timeout=5000)
            self.scp = SCPClient(self.client.get_transport())

        except AuthenticationException as e:
            print(e)
            raise e
        
        finally:
            return self.client
    
    def disconnect(self):
    
        self.client.close()
        self.scp.close()  

    def executeCommands(self, commands):
       
        if self.client is None:
            self.client = self.__connect()
        
        for cmd in commands:
            stdin, stdout, stderr = self.client.exec_command(cmd)
            stdout.channel.recv_exit_status()
            
            response = stdout.readlines() 
            for line in response:
                print(f'INPUT: {cmd} | OUTPUT: {line}')

    def downloadFile(self, file):
            """Download file from remote host."""
            
            if self.conn is None:
                self.conn = self.connect()
            self.scp.get(file)
            

if __name__ == "__main__":

    client = RemoteClient(host, user, publicKey, remotePath)

    client.getSSHKey()
    client.connect()
    client.executeCommands(commands)


    #print("Ha, we got a fool out there")
    # client = paramiko.SSHClient()
    # client.set_missing_host_key_policy(paramiko.AutoAddPolicy())
    # client.connect('1.2.3.4', username='lab', password='lab')
    # channelObject = client.get_transport().open_session()
    # channelObject.send('I told him we already got one!')
    # print(channelObject.recv(1024))
    # client.close